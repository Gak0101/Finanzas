#:kivy 2.3.0
#:import FigureCanvasKivyAgg kivy_garden.matplotlib.backend_kivyagg.FigureCanvasKivyAgg

<CategoryRow@BoxLayout>:
    # Definimos un widget reutilizable para cada fila de categoría
    # (Lo usaremos más adelante desde Python)
    orientation: 'horizontal'
    size_hint_y: None
    height: '40dp'
    spacing: '5dp'
    
    Label:
        id: name_label
        text: 'Category Name'
        size_hint_x: 0.5 # Ocupa la mitad del espacio
    Label:
        id: percentage_label
        text: '0%'
        size_hint_x: 0.2
    Label: # Placeholder for balance
        id: balance_label 
        text: '€0.00' 
        size_hint_x: 0.2
    Button:
        text: 'Edit'
        size_hint_x: 0.15 # Un poco más de espacio
        on_press: app.show_edit_popup(root.category_id) # Conectado!
    Button:
        text: 'X' # Más compacto
        size_hint_x: 0.1
        on_press: app.delete_category(root.category_id) # ¡Conectado!

<FinanceRootWidget>:
    FloatLayout:
        BoxLayout:
            orientation: 'vertical'
            spacing: 10
            size_hint: (1, 1) # Ocupa todo el espacio del FloatLayout
            pos_hint: {'top': 1} # Se alinea arriba

            # Placeholder donde añadiremos el gráfico desde Python
            BoxLayout:
                id: graph_placeholder # ID para encontrar este layout
                size_hint_y: 0.4 # Ajusta el tamaño como necesites
                canvas.before:
                    Color:
                        rgba: 0.2, 0.2, 0.2, 1 # Fondo gris oscuro para distinguirlo
                    Rectangle:
                        pos: self.pos
                        size: self.size

            Label: # Título para la lista de categorías
                text: 'Categorías'
                size_hint_y: None
                height: '30dp'
                font_size: '18sp'

            ScrollView: # Para que la lista sea desplazable
                size_hint_y: 0.4 # Ocupa otro 40% de la altura
                GridLayout: # Contendrá las filas de categorías
                    id: category_list_layout # Le damos ID para acceder desde Python
                    cols: 1 # Una columna (cada fila será un CategoryRow)
                    size_hint_y: None # Su altura crecerá con el contenido
                    height: self.minimum_height # Ajusta la altura al contenido
                    row_default_height: '40dp' # Altura por defecto de las filas (puede ser redundante con CategoryRow)
                    row_force_default: True
                    spacing: '2dp'
                    # Las filas (CategoryRow) se añadirán aquí desde Python

            Button:
                text: 'Añadir Categoría'
                size_hint_y: None
                height: '48dp' # Altura fija para el botón
                on_press: app.show_add_category_popup() # Llama a la función correcta

            # --- Sección Distribuir Ingreso ---
            BoxLayout:
                size_hint_y: None
                height: '40dp'
                spacing: '10dp'

                Label:
                    text: "Ingreso a Distribuir (€):"
                    size_hint_x: 0.4
                    halign: 'right'
                    valign: 'middle'

                TextInput:
                    id: income_input # ID para acceder desde Python
                    multiline: False
                    input_filter: 'float' # Solo permite números y punto decimal
                    size_hint_x: 0.3
                    hint_text: "Ej: 1500.50"

                Button:
                    text: "Distribuir Ingreso"
                    size_hint_x: 0.3
                    on_press: app.ui_distribute_income_kivy() # Llama a la función Python

            # --- Log estilo Matrix (Overlay) --- #
            AnchorLayout:
                anchor_x: 'right' 
                anchor_y: 'bottom'
                size_hint: (0.4, 0.25) # Tamaño del área de log (40% ancho, 25% alto)
                pos_hint: {'right': 1, 'bottom': 1} # Posición en esquina inferior derecha
                canvas.before: 
                    Color:
                        rgba: 0, 0, 0, 1 # Negro SÓLIDO
                    Rectangle:
                        pos: self.pos
                        size: self.size

                ScrollView:
                    id: log_scrollview
                    do_scroll_x: False
                    Label:
                        id: log_output_label
                        text: 'Log inicializado...\n' # Texto inicial
                        font_name: 'RobotoMono-Regular' # Fuente monoespaciada (si está disponible)
                        size_hint_y: None
                        height: self.texture_size[1] # Ajusta la altura al contenido
                        markup: True # ¡Importante para que interprete los colores!
                        padding: (5, 5)
                        text_size: self.width, None # Para que el texto se ajuste en ancho
